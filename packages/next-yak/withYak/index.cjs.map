{"version":3,"sources":["index.ts"],"sourcesContent":["/// <reference types=\"node\" />\nimport { NextConfig } from \"../../example/node_modules/next/dist/server/config.js\";\nimport path from \"path\";\nimport { existsSync } from \"fs\";\n\nexport type YakConfigOptions = { contextPath?: string }\n\nconst addYak = (yakOptions: YakConfigOptions, nextConfig: NextConfig) => {\n  const previousConfig = nextConfig.webpack;\n  nextConfig.webpack = (webpackConfig, options) => {\n    if (previousConfig) {\n      webpackConfig = previousConfig(webpackConfig, options);\n    }\n    webpackConfig.module.rules.push({\n      test: /\\.tsx?$/,\n      loader: require.resolve(\"../loaders/tsloader.cjs\"),\n      options: yakOptions,\n      issuerLayer: {\n        // prevent recursions when calling this.importModule\n        // in the tsloader\n        not: [\"yak-importModule\"],\n      },\n    });\n    webpackConfig.module.rules.push({\n      test: /\\.yak\\.module\\.css$/,\n      loader: require.resolve(\"../loaders/cssloader.cjs\"),\n      options: yakOptions,\n    });\n\n    // With the following alias the internal next-yak code \n    // is able to import a context which works for server components\n    const yakContext = resolveYakContext(yakOptions.contextPath, webpackConfig.context);\n    if (yakContext) {\n      webpackConfig.resolve.alias['next-yak/context/baseContext'] = yakContext;\n    }\n\n    return webpackConfig;\n  };\n  return nextConfig;\n};\n\n/**\n * Try to resolve yak\n */\nfunction resolveYakContext(contextPath: string | undefined, cwd: string) {\n  const yakContext = contextPath ? path.resolve(cwd, contextPath) : path.resolve(cwd, \"yak.context\");\n  const extensions = [\"\", \".ts\", \".tsx\", \".js\", \".jsx\", ];\n  for (const extension in extensions) {\n    const fileName = yakContext + extensions[extension];\n    if (existsSync(fileName)) {\n      return fileName;\n    }\n  }\n  if (contextPath) {\n    throw new Error(`Could not find yak context file at ${yakContext}`);\n  }\n}\n\n// Wrapper to allow sync, async, and function configuration of Next.js\n/**\n * Add Yak to your Next.js app\n * \n * @usage\n *\n * ```ts\n * // next.config.js\n * const { withYak } = require(\"next-yak/withYak\");\n * const nextConfig = {\n *   // your next config here\n * };\n * module.exports = withYak(nextConfig);\n * ```\n * \n * With a custom yakConfig\n *\n * ```ts\n * // next.config.js\n * const { withYak } = require(\"next-yak/withYak\");\n * const nextConfig = {\n *   // your next config here\n * };\n * const yakConfig = {\n *   // your yak config\n * };\n * module.exports = withYak(yakConfig, nextConfig);\n * ```\n */\nexport const withYak: {\n  <T extends \n    (\n      Record<string, any>\n      |\n      ((...args: any[]) => Record<string, any>)\n      |\n      ((...args: any[]) => Promise<Record<string, any>>)\n    )\n  >(yakOptions: YakConfigOptions, nextConfig: T): T;\n  // no yakConfig\n  <T extends \n    (\n      Record<string, any>\n      |\n      ((...args: any[]) => Record<string, any>)\n      |\n      ((...args: any[]) => Promise<Record<string, any>>)\n    )\n  >(nextConfig: T, _?: undefined): T;\n} = (\n  maybeYakOptions,\n  nextConfig\n) => {\n  if (nextConfig === undefined) {\n    return withYak({}, maybeYakOptions);\n  }\n  // If the second parameter is present the first parameter must be a YakConfigOptions\n  const yakOptions = maybeYakOptions as YakConfigOptions;\n  if (typeof nextConfig === \"function\") {\n    /**\n     * A NextConfig can be a sync or async function\n     * https://nextjs.org/docs/pages/api-reference/next-config-js\n     * @param {any[]} args\n     */\n    return (...args) => {\n      /** Dynamic Next Configs can be async or sync */\n      const config = nextConfig(...args) as NextConfig | Promise<NextConfig>;\n      return config instanceof Promise\n        ? config.then((config) => addYak(yakOptions, config))\n        : addYak(yakOptions, config);\n    };\n  }\n  return addYak(yakOptions, nextConfig);\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,kBAAiB;AACjB,gBAA2B;AAI3B,IAAM,SAAS,CAAC,YAA8B,eAA2B;AACvE,QAAM,iBAAiB,WAAW;AAClC,aAAW,UAAU,CAAC,eAAe,YAAY;AAC/C,QAAI,gBAAgB;AAClB,sBAAgB,eAAe,eAAe,OAAO;AAAA,IACvD;AACA,kBAAc,OAAO,MAAM,KAAK;AAAA,MAC9B,MAAM;AAAA,MACN,QAAQ,gBAAgB,yBAAyB;AAAA,MACjD,SAAS;AAAA,MACT,aAAa;AAAA;AAAA;AAAA,QAGX,KAAK,CAAC,kBAAkB;AAAA,MAC1B;AAAA,IACF,CAAC;AACD,kBAAc,OAAO,MAAM,KAAK;AAAA,MAC9B,MAAM;AAAA,MACN,QAAQ,gBAAgB,0BAA0B;AAAA,MAClD,SAAS;AAAA,IACX,CAAC;AAID,UAAM,aAAa,kBAAkB,WAAW,aAAa,cAAc,OAAO;AAClF,QAAI,YAAY;AACd,oBAAc,QAAQ,MAAM,8BAA8B,IAAI;AAAA,IAChE;AAEA,WAAO;AAAA,EACT;AACA,SAAO;AACT;AAKA,SAAS,kBAAkB,aAAiC,KAAa;AACvE,QAAM,aAAa,cAAc,YAAAA,QAAK,QAAQ,KAAK,WAAW,IAAI,YAAAA,QAAK,QAAQ,KAAK,aAAa;AACjG,QAAM,aAAa,CAAC,IAAI,OAAO,QAAQ,OAAO,MAAQ;AACtD,aAAW,aAAa,YAAY;AAClC,UAAM,WAAW,aAAa,WAAW,SAAS;AAClD,YAAI,sBAAW,QAAQ,GAAG;AACxB,aAAO;AAAA,IACT;AAAA,EACF;AACA,MAAI,aAAa;AACf,UAAM,IAAI,MAAM,sCAAsC,UAAU,EAAE;AAAA,EACpE;AACF;AA+BO,IAAM,UAoBT,CACF,iBACA,eACG;AACH,MAAI,eAAe,QAAW;AAC5B,WAAO,QAAQ,CAAC,GAAG,eAAe;AAAA,EACpC;AAEA,QAAM,aAAa;AACnB,MAAI,OAAO,eAAe,YAAY;AAMpC,WAAO,IAAI,SAAS;AAElB,YAAM,SAAS,WAAW,GAAG,IAAI;AACjC,aAAO,kBAAkB,UACrB,OAAO,KAAK,CAACC,YAAW,OAAO,YAAYA,OAAM,CAAC,IAClD,OAAO,YAAY,MAAM;AAAA,IAC/B;AAAA,EACF;AACA,SAAO,OAAO,YAAY,UAAU;AACtC;","names":["path","config"]}