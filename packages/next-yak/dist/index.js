var g=(...n)=>{let s=[],t=[],p={};for(let e=0;e<n.length;e++){let o=n[e];if(typeof o=="string")s.push(o);else if(typeof o=="function")t.push(o);else if(typeof o=="object"&&"style"in o)for(let i in o.style){let a=o.style[i];typeof a=="function"?t.push(r=>({style:{[i]:String(m(r,a))}})):p[i]=a}}if(t.length===0){let e=s.join(" ");return()=>({className:e,style:p})}let l=(e,o,i,a)=>{let r=o(e);if(typeof r=="function")l(e,r,i,a);else if(typeof r=="object"&&r&&("className"in r&&r.className&&i.push(r.className),"style"in r&&r.style))for(let y in r.style){let f=r.style[y];a[y]=f}};return e=>{let o=[...s],i={...p};for(let a=0;a<t.length;a++)l(e,t[a],o,i);return{className:o.join(" "),style:i}}},m=(n,s)=>{let t=s(n);if(typeof t=="function")return m(n,t);if(process.env.NODE_ENV==="development"&&typeof t!="string"&&typeof t!="number"&&!(t instanceof String))throw new Error(`Dynamic CSS functions must return a string or number but returned ${JSON.stringify(t)}`);return t},c=g;import u from"react";import{useTheme as T}from"next-yak/context";function S(n){return(s,...t)=>{let p=c(s,...t),l=(e,o)=>{let i=p(p.length?{...e,theme:T()}:{}),r={...typeof n=="string"?P(e):e,style:{...e.style,...i.style},className:(e.className?e.className+" ":"")+i.className};return typeof n!="string"&&"Yak"in n?n.Yak(r,o):u.createElement(n,{ref:o,...r})};return Object.assign(u.forwardRef(l),{Yak:l})}}var d=new Proxy(S,{get(n,s){if(typeof s!="string")throw new Error("Only string tags are supported");return n(s)}});function P(n){let s={};for(let t in n)t.startsWith("$")||(s[t]=n[t]);return s}var k=(...n)=>{let s=n.join(" ");return()=>({className:s})};var C=(n,...s)=>n;import{useTheme as O,YakThemeProvider as B}from"next-yak/context";export{B as YakThemeProvider,k as atoms,c as css,C as keyframes,d as styled,O as useTheme};
//# sourceMappingURL=index.js.map