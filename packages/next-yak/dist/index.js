var p=(...t)=>{let e=[],s=[],o={};for(let n of t)if(typeof n=="string")e.push(n);else if(typeof n=="function")s.push(n);else if(typeof n=="object"&&"style"in n)for(let r in n.style){let i=n.style[r];typeof i=="function"?s.push(a=>({style:{[r]:String(m(a,i))}})):o[r]=i}if(s.length===0){let n=e.join(" ");return()=>({className:n,style:o})}return n=>{let r=[...e],i={...o};for(let a=0;a<s.length;a++)d(n,s[a],r,i);return{className:r.join(" "),style:i}}},d=(t,e,s,o)=>{let n=e(t);for(;n;){if(typeof n=="function"){n=n(t);continue}else if(typeof n=="object"&&("className"in n&&n.className&&s.push(n.className),"style"in n&&n.style))for(let r in n.style)o[r]=n.style[r];break}},m=(t,e)=>{let s=e(t);if(typeof s=="function")return m(t,s);if(process.env.NODE_ENV==="development"&&typeof s!="string"&&typeof s!="number"&&!(s instanceof String))throw new Error(`Dynamic CSS functions must return a string or number but returned ${JSON.stringify(s)}`);return s};var A=(t,...e)=>String.raw(t,...e.map(s=>{let o=typeof s;return o==="number"||o==="string"?s:""})).trim(),k=A;import f from"react";import{useTheme as P}from"next-yak/context";var x=t=>Object.assign(f.forwardRef(t),{component:t}),C=t=>Object.assign(u(t),{attrs:e=>u(t,e)}),u=(t,e)=>(s,...o)=>{let n=p(s,...o),r=a=>N(a,typeof e=="function"?e(a):e);return x((a,y)=>{let c=r(Object.assign(e||n.length?{theme:P()}:{},a)),l=n(c),T=typeof t=="string"?b(c):c;return T.className=g(c.className,l.className),T.style="style"in c?{...c.style,...l.style}:l.style,typeof t!="string"&&"yak"in t?t.yak(T,y):(T.ref=y,f.createElement(t,{...T}))})},I=new Proxy(C,{get(t,e){return t(e)}});function b(t){let e={};for(let s in t)!s.startsWith("$")&&s!=="theme"&&(e[s]=t[s]);return e}var g=(t,e)=>t?e?t+" "+e:t:e,S=t=>{let e={};for(let s in t)t[s]!==void 0&&(e[s]=t[s]);return e},N=(t,e)=>e?{..."$__attrs"in t?{...S(e),...t}:{...t,...S(e)},className:g(t.className,e.className),style:{...t.style||{},...e.style||{}},$__attrs:!0}:t;var h=(...t)=>{let e=t.join(" ");return()=>({className:e})};var F=(t,...e)=>t;import{useTheme as $,YakThemeProvider as U}from"next-yak/context";export{U as YakThemeProvider,p as __cssYak,h as atoms,k as css,F as keyframes,I as styled,$ as useTheme};
//# sourceMappingURL=index.js.map