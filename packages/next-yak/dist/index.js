var k=(...t)=>{let n=[],e=[],l={};for(let o=0;o<t.length;o++){let s=t[o];if(typeof s=="string")n.push(s);else if(typeof s=="function")e.push(s);else if(typeof s=="object"&&"style"in s)for(let r in s.style){let a=s.style[r];typeof a=="function"?e.push(i=>({style:{[r]:String(f(i,a))}})):l[r]=a}}if(e.length===0){let o=n.join(" ");return()=>({className:o,style:l})}let y=(o,s,r,a)=>{let i=s(o);if(typeof i=="function")y(o,i,r,a);else if(typeof i=="object"&&i&&("className"in i&&i.className&&r.push(i.className),"style"in i&&i.style))for(let c in i.style){let m=i.style[c];a[c]=m}};return o=>{let s=[...n],r={...l};for(let a=0;a<e.length;a++)y(o,e[a],s,r);return{className:s.join(" "),style:r}}},f=(t,n)=>{let e=n(t);if(typeof e=="function")return f(t,e);if(process.env.NODE_ENV==="development"&&typeof e!="string"&&typeof e!="number"&&!(e instanceof String))throw new Error(`Dynamic CSS functions must return a string or number but returned ${JSON.stringify(e)}`);return e},u=k;import p from"react";import{useTheme as S}from"next-yak/context";var P=t=>Object.assign(g(t)(),{attrs:g(t)}),g=t=>n=>(e,...l)=>{let y=(o,s)=>{let r={...o,theme:S()};if(n){let m=typeof n=="function"?n(o):n;r=N(o,m)}let a=u(e,...l)(r),c={...typeof t=="string"?h(r):r,style:{...r.style||{},...a.style},className:T(r.className,a.className)};return typeof t!="string"&&"yak"in t?t.yak(c,s):s?p.createElement(t,{ref:s,...c}):p.createElement(t,{...c})};return Object.assign(p.forwardRef(y),{yak:y})},x=new Proxy(P,{get(t,n){if(typeof n!="string")throw new Error("Only string tags are supported");return t(n)}});function h(t){let n={};for(let e in t)!e.startsWith("$")&&e!=="theme"&&(n[e]=t[e]);return n}var T=(t,n)=>t?n?t+" "+n:t:n,d=t=>{let n={};for(let e in t)t[e]!==void 0&&(n[e]=t[e]);return n},N=(t,n)=>{let e={};return"$__attrs"in t?e={...d(n),...t}:e={...t,...d(n)},{...e,className:T(t.className,n.className),style:{...t.style||{},...n.style||{}},$__attrs:!0}};var C=(...t)=>{let n=t.join(" ");return()=>({className:n})};var w=(t,...n)=>t;import{useTheme as W,YakThemeProvider as D}from"next-yak/context";export{D as YakThemeProvider,C as atoms,u as css,w as keyframes,x as styled,W as useTheme};
//# sourceMappingURL=index.js.map