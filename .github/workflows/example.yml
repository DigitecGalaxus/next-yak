name: Build and Deploy packages/example
env:
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
on:
  push:
    branches:
      - main
    paths:
      - "packages/example/**"
      - "packages/yak-swc/**"
      - "packages/next-yak/**"
      - ".github/workflows/example.yml"
  pull_request:
    branches:
      - main
    paths:
      - "packages/example/**"
      - "packages/yak-swc/**"
      - "packages/next-yak/**"
      - ".github/workflows/example.yml"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.12.3
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "pnpm"
      - name: Install node_modules
        run: pnpm install

      - name: Build Linter
        run: pnpm --filter eslint-plugin-yak build

      - name: Lint Example
        run: pnpm --filter next-yak-example lint

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Add wasm32-wasip1 target
        run: rustup target add wasm32-wasip1
      - name: Enable caching
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: packages/yak-swc

      - name: Build with SWC
        run: pnpm run build:swc

      - name: Install Vercel CLI
        run: npm install -g vercel@35
      - name: Link Vercel project
        run: vercel link --yes --token ${{ secrets.VERCEL_TOKEN }}

      # Preview deployment (for pull requests and non-main pushes)
      - name: Pull Vercel environment information (Preview)
        if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref != 'refs/heads/main')
        run: vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}
      - name: Build project artifacts (Preview)
        if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref != 'refs/heads/main')
        run: vercel build --token ${{ secrets.VERCEL_TOKEN }}
      - name: Deploy to Vercel (Preview)
        if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref != 'refs/heads/main')
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }})
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
      - name: Find Documentation Comment
        uses: peter-evans/find-comment@v3
        id: find-comment
        if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref != 'refs/heads/main')
        with:
          issue-number: ${{ github.event.pull_request.number || github.event.inputs.pr_number }}
          comment-author: "github-actions[bot]"
          body-includes: "ðŸ§ª Example App Preview Deployed!"
      - name: Create or Update Documentation Comment
        if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref != 'refs/heads/main')
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number || github.event.inputs.pr_number }}
          body: |
            ## ðŸ§ª Example App Preview Deployed!

            A preview of the example app changes in this PR has been deployed to Vercel:

            ðŸ”— [View Example App Preview](${{ steps.deploy-preview.outputs.deployment_url }})

            This preview will update automatically with new commits to this PR.
          edit-mode: replace

      # Production deployment (for main branch pushes)
      - name: Pull Vercel environment information (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: vercel pull --yes --environment=production --token ${{ secrets.VERCEL_TOKEN }}
      - name: Build project artifacts (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: vercel build --prod --token ${{ secrets.VERCEL_TOKEN }}
      - name: Deploy to Vercel (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }}
